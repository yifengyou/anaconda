# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Makefile.am for anaconda widgets
#
# Copyright (C) 2011-2012  Red Hat, Inc.
#
# This copyrighted material is made available to anyone wishing to use,
# modify, copy, or redistribute it subject to the terms and conditions of
# the GNU General Public License v.2, or (at your option) any later version.
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY expressed or implied, including the implied warranties of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General
# Public License for more details.  You should have received a copy of the
# GNU General Public License along with this program; if not, write to the
# Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.  Any Red Hat trademarks that are incorporated in the
# source code or documentation are not subject to the GNU General Public
# License and may only be used or replicated with the express permission of
# Red Hat, Inc.
#




am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/anacondawidgets
pkgincludedir = $(includedir)/anacondawidgets
pkglibdir = $(libdir)/anacondawidgets
pkglibexecdir = $(libexecdir)/anacondawidgets
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-redhat-linux-gnu
host_triplet = x86_64-redhat-linux-gnu
am__append_1 = AnacondaWidgets-3.3.gir $(typelib_DATA)
am__append_2 = Makefile.in
subdir = src
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/acinclude.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(lib_include_HEADERS) \
	$(noinst_HEADERS) $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(typelibdir)" \
	"$(DESTDIR)$(lib_includedir)"
LTLIBRARIES = $(lib_LTLIBRARIES)
am__DEPENDENCIES_1 =
libAnacondaWidgets_la_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__objects_1 = libAnacondaWidgets_la-BaseWindow.lo \
	libAnacondaWidgets_la-DiskOverview.lo \
	libAnacondaWidgets_la-HubWindow.lo \
	libAnacondaWidgets_la-MountpointSelector.lo \
	libAnacondaWidgets_la-SpokeSelector.lo \
	libAnacondaWidgets_la-SpokeWindow.lo \
	libAnacondaWidgets_la-StandaloneWindow.lo \
	libAnacondaWidgets_la-LayoutIndicator.lo \
	libAnacondaWidgets_la-BaseStandalone.lo \
	libAnacondaWidgets_la-widgets-common.lo
am__objects_2 =
am__objects_3 = $(am__objects_1) $(am__objects_2)
am__objects_4 = $(am__objects_2) $(am__objects_2)
am_libAnacondaWidgets_la_OBJECTS = $(am__objects_3) $(am__objects_4)
nodist_libAnacondaWidgets_la_OBJECTS =  \
	libAnacondaWidgets_la-resources.lo
libAnacondaWidgets_la_OBJECTS = $(am_libAnacondaWidgets_la_OBJECTS) \
	$(nodist_libAnacondaWidgets_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
libAnacondaWidgets_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) \
	$(libAnacondaWidgets_la_LDFLAGS) $(LDFLAGS) -o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/../depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade =  \
	./$(DEPDIR)/libAnacondaWidgets_la-BaseStandalone.Plo \
	./$(DEPDIR)/libAnacondaWidgets_la-BaseWindow.Plo \
	./$(DEPDIR)/libAnacondaWidgets_la-DiskOverview.Plo \
	./$(DEPDIR)/libAnacondaWidgets_la-HubWindow.Plo \
	./$(DEPDIR)/libAnacondaWidgets_la-LayoutIndicator.Plo \
	./$(DEPDIR)/libAnacondaWidgets_la-MountpointSelector.Plo \
	./$(DEPDIR)/libAnacondaWidgets_la-SpokeSelector.Plo \
	./$(DEPDIR)/libAnacondaWidgets_la-SpokeWindow.Plo \
	./$(DEPDIR)/libAnacondaWidgets_la-StandaloneWindow.Plo \
	./$(DEPDIR)/libAnacondaWidgets_la-resources.Plo \
	./$(DEPDIR)/libAnacondaWidgets_la-widgets-common.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
DIST_SOURCES = $(libAnacondaWidgets_la_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
DATA = $(typelib_DATA)
HEADERS = $(lib_include_HEADERS) $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/../depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /root/rpmbuild/BUILD/anaconda-33.16.8.9/missing aclocal-1.16
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
AR = ar
AUTOCONF = ${SHELL} /root/rpmbuild/BUILD/anaconda-33.16.8.9/missing autoconf
AUTOHEADER = ${SHELL} /root/rpmbuild/BUILD/anaconda-33.16.8.9/missing autoheader
AUTOMAKE = ${SHELL} /root/rpmbuild/BUILD/anaconda-33.16.8.9/missing automake-1.16
AWK = gawk
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -O2 -g -pipe -Wall -Werror=format-security -Wp,-D_FORTIFY_SOURCE=2 -Wp,-D_GLIBCXX_ASSERTIONS -fexceptions -fstack-protector-strong -grecord-gcc-switches -specs=/usr/lib/rpm/redhat/redhat-hardened-cc1 -specs=/usr/lib/rpm/redhat/redhat-annobin-cc1 -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -DENABLE_NLS
CPP = gcc -E
CPPFLAGS = 
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = false
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
FGREP = /usr/bin/grep -F
GLADEUI_CFLAGS = -I/usr/include/libgladeui-2.0 -I/usr/include/gtk-3.0 -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/uuid -I/usr/include/harfbuzz -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/atk-1.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib64/dbus-1.0/include -pthread -I/usr/include/libxml2 
GLADEUI_LIBS = -lgladeui-2 -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 -lxml2 
GLIB_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include 
GLIB_COMPILE_RESOURCES = glib-compile-resources
GLIB_GENMARSHAL = glib-genmarshal
GLIB_LIBS = -lglib-2.0 
GLIB_MKENUMS = glib-mkenums
GOBJECT_QUERY = gobject-query
GREP = /usr/bin/grep
GTK_CFLAGS = -I/usr/include/gtk-3.0 -I/usr/include/pango-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/pixman-1 -I/usr/include/freetype2 -I/usr/include/libpng16 -I/usr/include/uuid -I/usr/include/harfbuzz -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/gio-unix-2.0/ -I/usr/include/atk-1.0 -I/usr/include/at-spi2-atk/2.0 -I/usr/include/at-spi-2.0 -I/usr/include/dbus-1.0 -I/usr/lib64/dbus-1.0/include -pthread 
GTK_LIBS = -lgtk-3 -lgdk-3 -lpangocairo-1.0 -lpango-1.0 -latk-1.0 -lcairo-gobject -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lgobject-2.0 -lglib-2.0 
HTML_DIR = ${datadir}/gtk-doc/html
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTROSPECTION_CFLAGS = -I/usr/include/gobject-introspection-1.0 -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -pthread 
INTROSPECTION_COMPILER = /usr/bin/g-ir-compiler
INTROSPECTION_GENERATE = /usr/bin/g-ir-generate
INTROSPECTION_GIRDIR = /usr/share/gir-1.0
INTROSPECTION_LIBS = -lgirepository-1.0 -lgobject-2.0 -lglib-2.0 
INTROSPECTION_MAKEFILE = /usr/share/gobject-introspection-1.0/Makefile.introspection
INTROSPECTION_SCANNER = /usr/bin/g-ir-scanner
INTROSPECTION_TYPELIBDIR = /usr/lib64/girepository-1.0
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = -Wl,-z,relro  -Wl,-z,now -specs=/usr/lib/rpm/redhat/redhat-hardened-ld
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBXKLAVIER_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/libxml2 
LIBXKLAVIER_LIBS = -lxklavier 
LIPO = 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /root/rpmbuild/BUILD/anaconda-33.16.8.9/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /usr/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OTOOL = 
OTOOL64 = 
PACKAGE = anacondawidgets
PACKAGE_BUGREPORT = clumens@redhat.com
PACKAGE_NAME = AnacondaWidgets
PACKAGE_STRING = AnacondaWidgets 3.3
PACKAGE_TARNAME = anacondawidgets
PACKAGE_URL = 
PACKAGE_VERSION = 3.3
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/x86_64-redhat-linux-gnu-pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = :/usr/lib64/pkgconfig:/usr/share/pkgconfig
PYTHON = /usr/bin/python3
PYTHON_EXEC_PREFIX = ${exec_prefix}
PYTHON_PLATFORM = linux
PYTHON_PREFIX = ${prefix}
PYTHON_VERSION = 3.6
RANLIB = ranlib
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 3.3
abs_builddir = /root/rpmbuild/BUILD/anaconda-33.16.8.9/widgets/src
abs_srcdir = /root/rpmbuild/BUILD/anaconda-33.16.8.9/widgets/src
abs_top_builddir = /root/rpmbuild/BUILD/anaconda-33.16.8.9/widgets
abs_top_srcdir = /root/rpmbuild/BUILD/anaconda-33.16.8.9/widgets
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = /usr/bin
build = x86_64-redhat-linux-gnu
build_alias = x86_64-redhat-linux-gnu
build_cpu = x86_64
build_os = linux-gnu
build_vendor = redhat
builddir = .
datadir = /usr/share
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = /usr
host = x86_64-redhat-linux-gnu
host_alias = x86_64-redhat-linux-gnu
host_cpu = x86_64
host_os = linux-gnu
host_vendor = redhat
htmldir = ${docdir}
includedir = /usr/include
infodir = /usr/share/info
install_sh = ${SHELL} /root/rpmbuild/BUILD/anaconda-33.16.8.9/install-sh
libdir = /usr/lib64
libexecdir = /usr/libexec
localedir = ${datarootdir}/locale
localstatedir = /var
mandir = /usr/share/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
pkgpyexecdir = ${pyexecdir}/anacondawidgets
pkgpythondir = ${pythondir}/anacondawidgets
prefix = /usr
program_transform_name = s&^&&
psdir = ${docdir}
pyexecdir = ${exec_prefix}/lib64/python3.6/site-packages
pythondir = ${prefix}/lib/python3.6/site-packages
sbindir = /usr/sbin
sharedstatedir = /var/lib
srcdir = .
sysconfdir = /etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
ACLOCAL_AMFLAGS = -I m4
GISOURCES = BaseWindow.c \
	 DiskOverview.c \
	 HubWindow.c \
	 MountpointSelector.c \
	 SpokeSelector.c \
	 SpokeWindow.c \
	 StandaloneWindow.c \
	 LayoutIndicator.c \
	 BaseStandalone.c \
	 widgets-common.c

GIHDRS = BaseWindow.h \
	 DiskOverview.h \
	 HubWindow.h \
	 MountpointSelector.h \
	 SpokeSelector.h \
	 SpokeWindow.h \
	 StandaloneWindow.h \
	 LayoutIndicator.h \
	 BaseStandalone.h \
	 widgets-common.h

NONGISOURCES = 
NONGIHDRS = 
SOURCES = $(GISOURCES) $(NONGISOURCES)
HDRS = $(GIHDRS) $(NONGIHDRS)
WIDGETSDATA = '"$(datadir)/anaconda"'
noinst_HEADERS = gettext.h intl.h
lib_LTLIBRARIES = libAnacondaWidgets.la
libAnacondaWidgets_la_CFLAGS = $(GTK_CFLAGS) $(LIBXKLAVIER_CFLAGS) -Wall -g\
			       -DWIDGETS_DATADIR=$(WIDGETSDATA)

libAnacondaWidgets_la_LIBADD = $(GTK_LIBS) $(LIBXKLAVIER_LIBS)
libAnacondaWidgets_la_LDFLAGS = $(LTLIBINTL) -version-info 4:0:0
libAnacondaWidgets_la_SOURCES = $(SOURCES) $(HDRS)
lib_includedir = $(includedir)/AnacondaWidgets
lib_include_HEADERS = $(HDRS)

# Resource bundle generation
RESOURCE_XML = resources.xml

# glib-compile-resources has --generate-dependencies that prints out everything in the
# .xml file, but the .xml file doesn't exist yet.
RESOURCE_DEPS = $(wildcard $(srcdir)/resources/*)
EXTRA_DIST = $(RESOURCE_DEPS)
nodist_libAnacondaWidgets_la_SOURCES = resources.c resources.h
CLEANFILES = resources.c resources.h $(RESOURCE_XML) $(am__append_1)
MAINTAINERCLEANFILES = gettext.h $(am__append_2)
AnacondaWidgets_3_3_gir_FILES = $(GISOURCES) $(GIHDRS)
AnacondaWidgets_3_3_gir_LIBS = libAnacondaWidgets.la
AnacondaWidgets_3_3_gir_SCANNERFLAGS = --warn-all --identifier-prefix=Anaconda --symbol-prefix=anaconda
AnacondaWidgets_3_3_gir_INCLUDES = Gtk-3.0 Xkl-1.0
INTROSPECTION_GIRS = AnacondaWidgets-3.3.gir
typelibdir = $(libdir)/girepository-1.0
typelib_DATA = $(INTROSPECTION_GIRS:.gir=.typelib)
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

install-libLTLIBRARIES: $(lib_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libdir)" || exit 1; \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(libdir)'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(INSTALL) $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(libdir)"; \
	}

uninstall-libLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LTLIBRARIES)'; test -n "$(libdir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(libdir)/$$f'"; \
	  $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(libdir)/$$f"; \
	done

clean-libLTLIBRARIES:
	-test -z "$(lib_LTLIBRARIES)" || rm -f $(lib_LTLIBRARIES)
	@list='$(lib_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libAnacondaWidgets.la: $(libAnacondaWidgets_la_OBJECTS) $(libAnacondaWidgets_la_DEPENDENCIES) $(EXTRA_libAnacondaWidgets_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libAnacondaWidgets_la_LINK) -rpath $(libdir) $(libAnacondaWidgets_la_OBJECTS) $(libAnacondaWidgets_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

#include ./$(DEPDIR)/libAnacondaWidgets_la-BaseStandalone.Plo # am--include-marker
#include ./$(DEPDIR)/libAnacondaWidgets_la-BaseWindow.Plo # am--include-marker
#include ./$(DEPDIR)/libAnacondaWidgets_la-DiskOverview.Plo # am--include-marker
#include ./$(DEPDIR)/libAnacondaWidgets_la-HubWindow.Plo # am--include-marker
#include ./$(DEPDIR)/libAnacondaWidgets_la-LayoutIndicator.Plo # am--include-marker
#include ./$(DEPDIR)/libAnacondaWidgets_la-MountpointSelector.Plo # am--include-marker
#include ./$(DEPDIR)/libAnacondaWidgets_la-SpokeSelector.Plo # am--include-marker
#include ./$(DEPDIR)/libAnacondaWidgets_la-SpokeWindow.Plo # am--include-marker
#include ./$(DEPDIR)/libAnacondaWidgets_la-StandaloneWindow.Plo # am--include-marker
#include ./$(DEPDIR)/libAnacondaWidgets_la-resources.Plo # am--include-marker
#include ./$(DEPDIR)/libAnacondaWidgets_la-widgets-common.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
#	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

libAnacondaWidgets_la-BaseWindow.lo: BaseWindow.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -MT libAnacondaWidgets_la-BaseWindow.lo -MD -MP -MF $(DEPDIR)/libAnacondaWidgets_la-BaseWindow.Tpo -c -o libAnacondaWidgets_la-BaseWindow.lo `test -f 'BaseWindow.c' || echo '$(srcdir)/'`BaseWindow.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libAnacondaWidgets_la-BaseWindow.Tpo $(DEPDIR)/libAnacondaWidgets_la-BaseWindow.Plo
#	$(AM_V_CC)source='BaseWindow.c' object='libAnacondaWidgets_la-BaseWindow.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -c -o libAnacondaWidgets_la-BaseWindow.lo `test -f 'BaseWindow.c' || echo '$(srcdir)/'`BaseWindow.c

libAnacondaWidgets_la-DiskOverview.lo: DiskOverview.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -MT libAnacondaWidgets_la-DiskOverview.lo -MD -MP -MF $(DEPDIR)/libAnacondaWidgets_la-DiskOverview.Tpo -c -o libAnacondaWidgets_la-DiskOverview.lo `test -f 'DiskOverview.c' || echo '$(srcdir)/'`DiskOverview.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libAnacondaWidgets_la-DiskOverview.Tpo $(DEPDIR)/libAnacondaWidgets_la-DiskOverview.Plo
#	$(AM_V_CC)source='DiskOverview.c' object='libAnacondaWidgets_la-DiskOverview.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -c -o libAnacondaWidgets_la-DiskOverview.lo `test -f 'DiskOverview.c' || echo '$(srcdir)/'`DiskOverview.c

libAnacondaWidgets_la-HubWindow.lo: HubWindow.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -MT libAnacondaWidgets_la-HubWindow.lo -MD -MP -MF $(DEPDIR)/libAnacondaWidgets_la-HubWindow.Tpo -c -o libAnacondaWidgets_la-HubWindow.lo `test -f 'HubWindow.c' || echo '$(srcdir)/'`HubWindow.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libAnacondaWidgets_la-HubWindow.Tpo $(DEPDIR)/libAnacondaWidgets_la-HubWindow.Plo
#	$(AM_V_CC)source='HubWindow.c' object='libAnacondaWidgets_la-HubWindow.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -c -o libAnacondaWidgets_la-HubWindow.lo `test -f 'HubWindow.c' || echo '$(srcdir)/'`HubWindow.c

libAnacondaWidgets_la-MountpointSelector.lo: MountpointSelector.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -MT libAnacondaWidgets_la-MountpointSelector.lo -MD -MP -MF $(DEPDIR)/libAnacondaWidgets_la-MountpointSelector.Tpo -c -o libAnacondaWidgets_la-MountpointSelector.lo `test -f 'MountpointSelector.c' || echo '$(srcdir)/'`MountpointSelector.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libAnacondaWidgets_la-MountpointSelector.Tpo $(DEPDIR)/libAnacondaWidgets_la-MountpointSelector.Plo
#	$(AM_V_CC)source='MountpointSelector.c' object='libAnacondaWidgets_la-MountpointSelector.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -c -o libAnacondaWidgets_la-MountpointSelector.lo `test -f 'MountpointSelector.c' || echo '$(srcdir)/'`MountpointSelector.c

libAnacondaWidgets_la-SpokeSelector.lo: SpokeSelector.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -MT libAnacondaWidgets_la-SpokeSelector.lo -MD -MP -MF $(DEPDIR)/libAnacondaWidgets_la-SpokeSelector.Tpo -c -o libAnacondaWidgets_la-SpokeSelector.lo `test -f 'SpokeSelector.c' || echo '$(srcdir)/'`SpokeSelector.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libAnacondaWidgets_la-SpokeSelector.Tpo $(DEPDIR)/libAnacondaWidgets_la-SpokeSelector.Plo
#	$(AM_V_CC)source='SpokeSelector.c' object='libAnacondaWidgets_la-SpokeSelector.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -c -o libAnacondaWidgets_la-SpokeSelector.lo `test -f 'SpokeSelector.c' || echo '$(srcdir)/'`SpokeSelector.c

libAnacondaWidgets_la-SpokeWindow.lo: SpokeWindow.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -MT libAnacondaWidgets_la-SpokeWindow.lo -MD -MP -MF $(DEPDIR)/libAnacondaWidgets_la-SpokeWindow.Tpo -c -o libAnacondaWidgets_la-SpokeWindow.lo `test -f 'SpokeWindow.c' || echo '$(srcdir)/'`SpokeWindow.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libAnacondaWidgets_la-SpokeWindow.Tpo $(DEPDIR)/libAnacondaWidgets_la-SpokeWindow.Plo
#	$(AM_V_CC)source='SpokeWindow.c' object='libAnacondaWidgets_la-SpokeWindow.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -c -o libAnacondaWidgets_la-SpokeWindow.lo `test -f 'SpokeWindow.c' || echo '$(srcdir)/'`SpokeWindow.c

libAnacondaWidgets_la-StandaloneWindow.lo: StandaloneWindow.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -MT libAnacondaWidgets_la-StandaloneWindow.lo -MD -MP -MF $(DEPDIR)/libAnacondaWidgets_la-StandaloneWindow.Tpo -c -o libAnacondaWidgets_la-StandaloneWindow.lo `test -f 'StandaloneWindow.c' || echo '$(srcdir)/'`StandaloneWindow.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libAnacondaWidgets_la-StandaloneWindow.Tpo $(DEPDIR)/libAnacondaWidgets_la-StandaloneWindow.Plo
#	$(AM_V_CC)source='StandaloneWindow.c' object='libAnacondaWidgets_la-StandaloneWindow.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -c -o libAnacondaWidgets_la-StandaloneWindow.lo `test -f 'StandaloneWindow.c' || echo '$(srcdir)/'`StandaloneWindow.c

libAnacondaWidgets_la-LayoutIndicator.lo: LayoutIndicator.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -MT libAnacondaWidgets_la-LayoutIndicator.lo -MD -MP -MF $(DEPDIR)/libAnacondaWidgets_la-LayoutIndicator.Tpo -c -o libAnacondaWidgets_la-LayoutIndicator.lo `test -f 'LayoutIndicator.c' || echo '$(srcdir)/'`LayoutIndicator.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libAnacondaWidgets_la-LayoutIndicator.Tpo $(DEPDIR)/libAnacondaWidgets_la-LayoutIndicator.Plo
#	$(AM_V_CC)source='LayoutIndicator.c' object='libAnacondaWidgets_la-LayoutIndicator.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -c -o libAnacondaWidgets_la-LayoutIndicator.lo `test -f 'LayoutIndicator.c' || echo '$(srcdir)/'`LayoutIndicator.c

libAnacondaWidgets_la-BaseStandalone.lo: BaseStandalone.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -MT libAnacondaWidgets_la-BaseStandalone.lo -MD -MP -MF $(DEPDIR)/libAnacondaWidgets_la-BaseStandalone.Tpo -c -o libAnacondaWidgets_la-BaseStandalone.lo `test -f 'BaseStandalone.c' || echo '$(srcdir)/'`BaseStandalone.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libAnacondaWidgets_la-BaseStandalone.Tpo $(DEPDIR)/libAnacondaWidgets_la-BaseStandalone.Plo
#	$(AM_V_CC)source='BaseStandalone.c' object='libAnacondaWidgets_la-BaseStandalone.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -c -o libAnacondaWidgets_la-BaseStandalone.lo `test -f 'BaseStandalone.c' || echo '$(srcdir)/'`BaseStandalone.c

libAnacondaWidgets_la-widgets-common.lo: widgets-common.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -MT libAnacondaWidgets_la-widgets-common.lo -MD -MP -MF $(DEPDIR)/libAnacondaWidgets_la-widgets-common.Tpo -c -o libAnacondaWidgets_la-widgets-common.lo `test -f 'widgets-common.c' || echo '$(srcdir)/'`widgets-common.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libAnacondaWidgets_la-widgets-common.Tpo $(DEPDIR)/libAnacondaWidgets_la-widgets-common.Plo
#	$(AM_V_CC)source='widgets-common.c' object='libAnacondaWidgets_la-widgets-common.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -c -o libAnacondaWidgets_la-widgets-common.lo `test -f 'widgets-common.c' || echo '$(srcdir)/'`widgets-common.c

libAnacondaWidgets_la-resources.lo: resources.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -MT libAnacondaWidgets_la-resources.lo -MD -MP -MF $(DEPDIR)/libAnacondaWidgets_la-resources.Tpo -c -o libAnacondaWidgets_la-resources.lo `test -f 'resources.c' || echo '$(srcdir)/'`resources.c
#	$(AM_V_at)$(am__mv) $(DEPDIR)/libAnacondaWidgets_la-resources.Tpo $(DEPDIR)/libAnacondaWidgets_la-resources.Plo
#	$(AM_V_CC)source='resources.c' object='libAnacondaWidgets_la-resources.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libAnacondaWidgets_la_CFLAGS) $(CFLAGS) -c -o libAnacondaWidgets_la-resources.lo `test -f 'resources.c' || echo '$(srcdir)/'`resources.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-typelibDATA: $(typelib_DATA)
	@$(NORMAL_INSTALL)
	@list='$(typelib_DATA)'; test -n "$(typelibdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(typelibdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(typelibdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(typelibdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(typelibdir)" || exit $$?; \
	done

uninstall-typelibDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(typelib_DATA)'; test -n "$(typelibdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(typelibdir)'; $(am__uninstall_files_from_dir)
install-lib_includeHEADERS: $(lib_include_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(lib_include_HEADERS)'; test -n "$(lib_includedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(lib_includedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(lib_includedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_HEADER) $$files '$(DESTDIR)$(lib_includedir)'"; \
	  $(INSTALL_HEADER) $$files "$(DESTDIR)$(lib_includedir)" || exit $$?; \
	done

uninstall-lib_includeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_include_HEADERS)'; test -n "$(lib_includedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(lib_includedir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(DATA) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(typelibdir)" "$(DESTDIR)$(lib_includedir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-generic clean-libLTLIBRARIES clean-libtool \
	mostlyclean-am

distclean: distclean-am
		-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-BaseStandalone.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-BaseWindow.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-DiskOverview.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-HubWindow.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-LayoutIndicator.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-MountpointSelector.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-SpokeSelector.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-SpokeWindow.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-StandaloneWindow.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-resources.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-widgets-common.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-lib_includeHEADERS install-typelibDATA

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-libLTLIBRARIES

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-BaseStandalone.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-BaseWindow.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-DiskOverview.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-HubWindow.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-LayoutIndicator.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-MountpointSelector.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-SpokeSelector.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-SpokeWindow.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-StandaloneWindow.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-resources.Plo
	-rm -f ./$(DEPDIR)/libAnacondaWidgets_la-widgets-common.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-libLTLIBRARIES uninstall-lib_includeHEADERS \
	uninstall-typelibDATA

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libLTLIBRARIES clean-libtool cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-libLTLIBRARIES \
	install-lib_includeHEADERS install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	install-typelibDATA installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags tags-am uninstall uninstall-am \
	uninstall-libLTLIBRARIES uninstall-lib_includeHEADERS \
	uninstall-typelibDATA

.PRECIOUS: Makefile


-include $(INTROSPECTION_MAKEFILE)

# Auto-generate resources.xml from the files in the resources directory
$(RESOURCE_XML): $(RESOURCE_DEPS) Makefile
	$(AM_V_GEN) echo "<?xml version='1.0' encoding='utf-8'?>" > $@ ; \
	echo "<gresources>" >> $@ ; \
	echo "  <gresource prefix='/org/fedoraproject/anaconda/widgets'>" >> $@ ; \
	for file in $(RESOURCE_DEPS) ; do \
	    basefile=$$(basename $$file) ; \
	    if [ "$$(echo "$$basefile" | cut -d . -f 2-)" = "png" ]; then \
	        echo "    <file preprocess='to-pixdata'>$$basefile</file>" >> $@ ; \
	    elif [ "$$(head -c 5 $$file)" = "<?xml" ]; then \
	        echo "    <file preprocess='xml-stripblanks'>$$basefile</file>" >> $@ ; \
	    else \
	        echo "    <file>$$basefile</file>" >> $@ ; \
	    fi ; \
	done ; \
	echo "  </gresource>" >> $@ ; \
	echo "</gresources>" >> $@

# Source files generated by glib-compile-resources
resources.h: $(RESOURCE_XML) $(RESOURCE_DEPS) Makefile
	$(AM_V_GEN) $(GLIB_COMPILE_RESOURCES) --target=$@ \
		--sourcedir=$(srcdir)/resources --c-name anaconda_widgets --generate-header --internal \
		$(RESOURCE_XML)

resources.c: $(RESOURCE_XML) $(RESOURCE_DEPS) Makefile
	$(AM_V_GEN) $(GLIB_COMPILE_RESOURCES) --target=$@ \
		--sourcedir=$(srcdir)/resources --c-name anaconda_widgets --generate-source --internal \
		$(RESOURCE_XML)

AnacondaWidgets-3.3.gir: libAnacondaWidgets.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
